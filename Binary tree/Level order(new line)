def height (root):
    if root==None:
        return 0
    
    
    l=height(root.left)
    h=height(root.right)
    
    if l>h:
        return l+1
    else:
        return h+1


def levelOrder(root):
    
    '''
    :param root: root of given tree.
    :return: the level order traversal 
    '''
    
    x=height(root)
    count=0
    # code here
    if root is None:
        return
     
    # Create an empty queue 
    # for level order traversal
    queue=[]
    ans=[]
    l=[]
    # Enqueue Root and initialize height
    queue.append(root)
    queue.append(None)
   
   
    while(len(queue) > 0):
       
        # Print front of queue and 
        # remove it from queue
        #print (queue[0].data)
        
        node = queue.pop(0)
        
        if node==None:
            count=count+1
            l.append(ans)
            ans=[]
            if count<x:
                queue.append(None)
           
           
        else: 
            if node is not None:
                ans.append(node.data)
        #Enqueue left child
            if node.left is not None:
                queue.append(node.left)
 
        # Enqueue right child
            if node.right is not None:
                queue.append(node.right)
    # Code here
       
    return l

    
